version: '3.9'

services:
  grafana:
    image: grafana/grafana:10.0.1
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana/datasources:/etc/grafana/provisioning/datasources
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin1
      - GF_SECURITY_ADMIN_USER=admin1
      - GF_USERS_ALLOW_SIGN_UP=false
    networks:
      - mynetwork
    restart: unless-stopped
  
  go-app:
    build:
      context: ./go-app
      dockerfile: ./Dockerfile
    container_name: go-app
    restart: unless-stopped
    ports:
      - '9000:9000'
    networks:
      - mynetwork
  
  prometheus:
    image: prom/prometheus:${PROMETHEUS_VERSION}
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      - mynetwork

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: monitoring_cadvisor
    restart: unless-stopped
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8081:8080
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  grafana-storage:
  prometheus_data: